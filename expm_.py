import numpy as np



# s1 = np.array([[(115.12925464970229+393528.9437979795j), 0, 0, 0], 
# [0, (115.12925464970229-388072.87623598985j), 0, 0], 
# [0, 0, (-115.12925464970229-393528.9437979795j), 0], 
# [0, 0, 0, (-115.12925464970229+388072.87623598985j)]])


# s1_ = np.array([[ 115.12925465+393528.94379798j,   0.  +0.j, 0 +0.j, 0.  +0.j],
#  [0,  115.12925465-388072.87623599j, 0, 0],
#  [0. +0.j, 0. +0.j, -115.12925465-393528.94379798j, 0.+0.j  ],
#  [0. +0.j, 0. +0.j, 0. +0.j, -115.12925465+388072.87623599j]])


# l_seg = 6.44e-06
# l_seg_ = 6.44e-06

# s2 = np.array([[(-115.12925464970229-393528.9437979795j), 0, (381.59206198881645+319.0368698339145j), (37146.83751659728-33076.9213104622j)], 
# 	[0, (-115.12925464970229+388072.87623598985j), (37146.83751659728-33076.9213104622j), (-272.81746033334474-415.89380786874267j)], 
# 	[(355.375375658537-297.11794022977864j), (34594.722091924144+30804.423118942854j), (115.12925464970229+393528.9437979795j), 0], 
# 	[(34594.722091924144+30804.423118942854j), (-254.07396303493306+387.32047368885117j), 0, (115.12925464970229-388072.87623598985j)]], 
# 	dtype=complex)


# # s2_ = np.array([[ -115.12925465-3.93528944e+05j, 0., 381.59206199+3.19036870e+02j, 37146.8375166-3.30769213e+04j],
# #  [0  -115.12925465+3.88072876e+05j, 37146.8375166-3.30769213e+04j,  -272.81746033-4.15893808e+02j],
# #  [355.37537566-2.97117940e+02j, 34594.72209192+3.08044231e+04j, 115.12925465+3.93528944e+05j, 0.], 
# #  [34594.72209192 + 3.08044231e+04j, -254.07396303 + 3.87320474e+02j, 0., 115.12925465-3.88072876e+05j]])

# s2_ = np.array([[-115.12925465-3.93528944e+05j, 0., 381.59206199+3.19036870e+02j, 37146.8375166-3.30769213e+04j],
#  [0, -115.12925465+3.88072876e+05j, 37146.8375166-3.30769213e+04j, -272.81746033-4.15893808e+02j], 
#  [355.37537566-2.97117940e+02j, 34594.72209192+3.08044231e+04j, 115.12925465+3.93528944e+05j, 0.], 
#  [34594.72209192 + 3.08044231e+04j, -254.07396303 + 3.87320474e+02j, 0., 115.12925465-3.88072876e+05j]])

# from utils import *




# M = np.matmul(expm(s1*l_seg), expm(s2*l_seg))
# M_ = np.matmul(expm(s1_*l_seg_), expm(s2_*l_seg_))



l_seg = 0.000322


s1 = np.array([[(115.12925464970229+434978.042428175j), 0, 0, 0], 
[0, (115.12925464970229-344467.3524676487j), 0, 0], 
[0, 0, (-115.12925464970229-434978.042428175j), 0], 
[0, 0, 0, (-115.12925464970229+344467.3524676487j)]])

s2 = np.array([[(-115.12925464970229-434978.042428175j), 0, -480j, -48000j], 
[0, (-115.12925464970229+344467.3524676487j), -48000j, -480j], 
[480j, 48000j, (115.12925464970229+434978.042428175j), 0], 
[48000j, 480j, 0, (115.12925464970229-344467.3524676487j)]])


s1_ = np.array([[[ 115.12925465+434978.04242817j,    0. +0.j,
      0. +0.j,            0.             +0.j        ],
  [   0. +0.j,          115.12925465-344467.35246765j,
      0. +0.j ,           0. +0.j        ],
  [   0. +0.j,            0. +0.j,
   -115.12925465-434978.04242817j,    0. +0.j        ],
  [   0.             +0.j ,           0. +0.j,
      0.             +0.j ,        -115.12925465+344467.35246765j]]]).squeeze()


s2_ = np.array([[[-115.12925465-434978.04242817j,    0.             +0.j,
      0.           -480.j,           0.         -48000.j,        ],
  [   0.             +0.j ,        -115.12925465+344467.35246765j,
      0.         -48000.j,            0.           -480.j        ],
  [   0.           +480.j,            0.         +48000.j,
    115.12925465+434978.04242817j,    0.             +0.j        ],
  [   0.         +48000.j,            0.           +480.j,
      0.             +0.j,          115.12925465-344467.35246765j]]]).squeeze()


from utils import *

# print(s1 - s1_)
# print(s2 - s2_)
print(s1*l_seg)
M = np.matmul(expm(s1*l_seg), expm(s2*l_seg))
M_ = np.matmul(expm(s1_*l_seg), expm(s2_*l_seg))

M = switchTop(np.expand_dims(M, 0)).squeeze()
M_ = switchTop(np.expand_dims(M_, 0)).squeeze()

drop = 10*np.log10(np.abs(M[3,0])**2)
drop_ = 10*np.log10(np.abs(M_[3,0])**2)


# print(np.abs(M), drop_)
print("----")


M = np.matmul(scipy.linalg.expm(s1*l_seg), scipy.linalg.expm(s2*l_seg))
M_ = np.matmul(scipy.linalg.expm(s1_*l_seg), scipy.linalg.expm(s2_*l_seg))

M = switchTop(np.expand_dims(M, 0)).squeeze()
M_ = switchTop(np.expand_dims(M_, 0)).squeeze()

drop = 10*np.log10(np.abs(M[3,0])**2)
drop_ = 10*np.log10(np.abs(M_[3,0])**2)


print(drop, drop_)






